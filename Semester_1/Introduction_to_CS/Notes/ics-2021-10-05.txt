* Represent -543.21 as a single precision floating point number

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |S|    exponent   |         mantissa (23 bits)                  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  The sign bit is S=1 since the number is negative.

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |1|    exponent   |         mantissa (23 bits)                  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  Conversion of the absolute integer part into binary:

    543 mod 2 = 1           1
    271 mod 2 = 1          11
    135 mod 2 = 1         111
     67 mod 2 = 1        1111
     33 mod 2 = 1       11111
     16 mod 2 = 0      011111
      8 mod 2 = 0     0011111
      4 mod 2 = 0    00011111
      2 mod 2 = 0   000011111
      1 mod 2 = 1  1000011111

  Normalization:

    1000011111 = 1.000011111 x 2^9

  Biasing of the exponent:

    E = 9 + 127 = 136 = ... = 10001000

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |1|1 0 0 0 1 0 0 0|         mantissa (23 bits)                  |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  We drop the leading 1 and have the beginning of the mantissa:

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |1|1 0 0 0 1 0 0 0|0 0 0 0 1 1 1 1 1                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  We need to convert the fractional part to determine the missing bits:

    0.21 * 2 = 0.42             0
    0.42 * 2 = 0.84             00
    0.84 * 2 = 1.68             001
    0.68 * 2 = 1.36             0011
    0.36 * 2 = 0.72             00110
    0.72 * 2 = 1.44             001101
    0.44 * 2 = 0.88             0011010
    0.88 * 2 = 1.76             00110101
    0.76 * 2 = 1.52             001101011
    0.52 * 2 = 1.04             0011010111
    0.04 * 2 = 0.08             00110101110
    0.08 * 2 = 0.16             001101011100
    0.16 * 2 = 0.32             0011010111000
    0.32 * 2 = 0.64             00110101110000

     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |1|1 0 0 0 1 0 0 0|0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  Since the number is negative, the last bit is rounding towards -oo,
  the default is usually to round to zero, hence the last bit may be
  set to 1.
